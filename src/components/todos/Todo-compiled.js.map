{"version":3,"sources":["Todo.js"],"names":[],"mappings":";;;;;;;;AAKA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;+eAVA;;;;;;;IAYM,I;;;;;;;;;;;6BACK;AAAA,mBAE8C,KAAK,KAFnD;AAAA,UAEC,QAFD,UAEC,QAFD;AAAA,UAEW,YAFX,UAEW,YAFX;AAAA,UAEyB,gBAFzB,UAEyB,gBAFzB;;AAGP,aACE;AAAA;AAAA;AACE;AACE,sBAAe;AAAA,mBAAQ,SAAS,qBAAQ,IAAR,CAAT,CAAR;AAAA;AADjB,UADF;AAME;AACE,iBAAU,YADZ;AAEE,uBACE;AAAA,mBAAS,SAAS,0BAAa,KAAb,CAAT,CAAT;AAAA;AAHJ,UANF;AAaE;AACE,kBAAW,gBADb;AAEE,0BACE;AAAA,mBAAc,SAAS,iCAAoB,UAApB,CAAT,CAAd;AAAA;AAHJ;AAbF,OADF;AAsBD;;;;;;AAGH,KAAK,SAAL,GAAiB;AACf,gBAAc,iBAAU,OAAV,CAAkB,iBAAU,KAAV,CAAgB;AAC9C,UAAM,iBAAU,MAAV,CAAiB,UADuB;AAE9C,eAAW,iBAAU,IAAV,CAAe;AAFoB,GAAhB,EAG7B,UAHW,EAGC,UAJA;AAKf,oBAAkB,iBAAU,KAAV,CAAgB,CAChC,UADgC,EAEhC,gBAFgC,EAGhC,aAHgC,CAAhB,EAIf;AATY,CAAjB;;AAYA,SAAS,WAAT,CAAqB,KAArB,EAA4B,MAA5B,EAAoC;AAClC,UAAO,MAAP;AACE,SAAK,0BAAkB,QAAvB;AACE,aAAO,KAAP;AACF,SAAK,0BAAkB,cAAvB;AACE,aAAO,MAAM,MAAN,CAAa;AAAA,eAAQ,KAAK,SAAb;AAAA,OAAb,CAAP;AACF,SAAK,0BAAkB,WAAvB;AACE,aAAO,MAAM,MAAN,CAAa;AAAA,eAAQ,CAAC,KAAK,SAAd;AAAA,OAAb,CAAP;AANJ;AAQD;;AAED,SAAS,MAAT,CAAgB,KAAhB,EAAuB;AACrB,SAAO;AACL,kBAAc,YAAY,MAAM,KAAlB,EAAyB,MAAM,gBAA/B,CADT;AAEL,sBAAkB,MAAM;AAFnB,GAAP;AAID;;AAED;kBACe,yBAAQ,MAAR,EAAgB,IAAhB,C;;AAKf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Todo-compiled.js","sourcesContent":["/**\n * Created by: Luojinghui/luojinghui424@gmail.com\n * Date: 16/9/22\n * Time: 下午8:28\n */\nimport React ,{ Component , PropTypes} from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo, completeTodo, setVisibilityFilter, VisibilityFilters } from '../../actions/todo/action'\nimport AddTodo from './AddTodo';\nimport TodoList from './TodoList';\nimport Footer from './Footer';\n\nclass Todo extends Component {\n  render() {\n\n    const { dispatch, visibleTodos, visibilityFilter } = this.props;\n    return (\n      <div>\n        <AddTodo\n          onAddClick = { text => dispatch(addTodo(text))\n          }\n        />\n\n        <TodoList\n          todos = { visibleTodos }\n          onTodoClick = {\n            index => dispatch(completeTodo(index))\n          }\n        />\n\n        <Footer\n          filter = { visibilityFilter }\n          onFilterChange = {\n            nextFilter => dispatch(setVisibilityFilter(nextFilter))\n          }\n        />\n      </div>\n    )\n  }\n}\n\nTodo.PropTypes = {\n  visibleTodos: PropTypes.arrayOf(PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired\n  }).isRequired).isRequired,\n  visibilityFilter: PropTypes.oneOf([\n    'show_all',\n    'show_completed',\n    'show_active'\n  ]).isRequired\n}\n\nfunction selectTodos(todos, filter) {\n  switch(filter) {\n    case VisibilityFilters.show_all:\n      return todos\n    case VisibilityFilters.show_completed:\n      return todos.filter(todo => todo.completed)\n    case VisibilityFilters.show_active:\n      return todos.filter(todo => !todo.completed)\n  }\n}\n\nfunction select(state) {\n  return {\n    visibleTodos: selectTodos(state.todos, state.visibilityFilter),\n    visibilityFilter: state.visibilitFilter\n  }\n}\n\n// 包装 component ，注入 dispatch 和 state 到其默认的 connect(select)(App) 中；\nexport default connect(select)(Todo)\n\n\n\n\n// todos = { [\n// {\n//   text: 'use Redux',\n//   completed: true\n// },\n// {\n//   text: 'learn to connect it to react',\n//     completed: false\n// },\n// {\n//   text: 'test value',\n//     completed: false\n// }\n// ] }\n"]}